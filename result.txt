NAME: diffgram
LAST DEPLOYED: Mon May 23 11:09:09 2022
NAMESPACE: default
STATUS: pending-install
REVISION: 1
TEST SUITE: None
HOOKS:
---
# Source: diffgram/templates/hooks/secrets_db_migrations.yaml
apiVersion: v1
kind: Secret

metadata:
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade, pre-rollback
    "helm.sh/hook-weight": "-3"
    "helm.sh/hook-delete-policy": before-hook-creation, hook-succeeded
  name: db-migrations-secret
type: Opaque
stringData:
  STRIPE_API_KEY: none
  DIFFGRAM_AWS_ACCESS_KEY_SECRET: write_your_aws_access_key_secret
  DIFFGRAM_AWS_ACCESS_KEY_ID: write_your_aws_access_key
  _ANALYTICS_WRITE_KEY: provided_by_diffgram_team
  MAILGUN_KEY: provided_by_diffgram_team
  HUB_SPOT_KEY: provided_by_diffgram_team
  SECRET_KEY: provided_by_diffgram_team
  INTER_SERVICE_SECRET: provided_by_diffgram_team
  FERNET_KEY: NeL_RED6zZ1XF3XT7Yd1hzFPYyebrg6UdkECTOLHEdI=
  
  DATABASE_URL:  "postgresql+psycopg2://postgres:postgres@diffgram-postgres/postgres"
  
  
  
  USER_PASSWORDS_SECRET:  provided_by_diffgram_team
  DIFFGRAM_AZURE_CONNECTION_STRING:  put_your_azure_connection_string_here
  RABBITMQ_DEFAULT_PASS:  diffgram
---
# Source: diffgram/templates/hooks/configmap_db_migrations.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade, pre-rollback
    "helm.sh/hook-weight": "-3" # we use a smaller weight so it's created before the job
    "helm.sh/hook-delete-policy": before-hook-creation, hook-succeeded
  name: db-migrations-configmap
data:
  USERDOMAIN: kubernetes
  DIFFGRAM_SYSTEM_MODE: production
  DIFFGRAM_STATIC_STORAGE_PROVIDER: aws
  DIFFGRAM_S3_BUCKET_NAME: none
  ML__DIFFGRAM_S3_BUCKET_NAME: diffgram-testing
  GOOGLE_APPLICATION_CREDENTIALS: /etc/gcp/sa_credentials.json # Check the volume in deployment.yaml and service_account_secret.yaml
  CLOUD_STORAGE_BUCKET:  diffgram-testing
  ML__CLOUD_STORAGE_BUCKET:  diffgram-testing
  URL_BASE: example.com
  WALRUS_SERVICE_URL_BASE: example.com
  SERVICE_ACCOUNT_FULL_PATH: /etc/gcp/sa_credentials.json
  DIFFGRAM_AZURE_CONTAINER_NAME: none
  ML__DIFFGRAM_AZURE_CONTAINER_NAME: none
  DIFFGRAM_INSTALL_FINGERPRINT: helm_fingerprint_default
  DIFFGRAM_VERSION_TAG: 0.16.0
  DIFFGRAM_HOST_OS: helm_os_default
  DATABASE_CONNECTION_POOL_SIZE: "10"
  PYTHONPATH: "/app:/app/shared:/"
  PROCESS_MEDIA_NUM_VIDEO_THREADS: "1"
  PROCESS_MEDIA_NUM_FRAME_THREADS: "4"
  NEW_RELIC_LICENSE_KEY: none
  EMAIL_DOMAIN_NAME: example.com
  ALLOW_EVENTHUB: "False"
  EMAIL_VALIDATION: "False"
  ALLOW_STRIPE_BILLING: "False"
  IS_OPEN_SOURCE: "True"
  DIFFGRAM_MINIO_ENDPOINT_URL: none
  DIFFGRAM_MINIO_ACCESS_KEY_ID: none
  DIFFGRAM_MINIO_ACCESS_KEY_SECRET: none
  DIFFGRAM_MINIO_DISABLED_SSL_VERIFY: none
  RABBITMQ_HOST: diffgram-rabbitmq
  RABBITMQ_PORT: 5672
  RABBITMQ_DEFAULT_USER: user
---
# Source: diffgram/templates/postgres/volumeclaim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pv-claim
  annotations:
    "helm.sh/resource-policy": keep
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "-5"
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
# Source: diffgram/templates/hooks/db_service_migrations.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install, pre-upgrade, pre-rollback
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation, hook-succeeded
  name: diffgram-postgres-hook
spec:
  ports:
    - port: 5432
  selector:
    app: postgres
---
# Source: diffgram/templates/postgres/deployment.yaml
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "postgres"
  namespace: default
  labels:
    app: "postgres"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "-3"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "postgres"
  template:
    metadata:
      labels:
        app: "postgres"
    spec:
      containers:
      - name: "postgres"
        image: "postgres:11"
        env:
        - name: "POSTGRES_DB"
          value: postgres
        - name: "POSTGRES_USER"
          value: postgres
        - name: "POSTGRES_PASSWORD"
          value: postgres
        ports:
          - containerPort: 5432
            name: postgres
        volumeMounts:
          - name: postgres-storage
            mountPath: /var/lib/postgresql/db-data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pv-claim
---
# Source: diffgram/templates/hooks/database_pre_install.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "diffgram-pre-install"
  labels:
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "diffgram"
    app.kubernetes.io/version: 0.0.1
    helm.sh/chart: "diffgram-0.2.0"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "2"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      name: "diffgram"
      labels:
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/instance: "diffgram"
        helm.sh/chart: "diffgram-0.2.0"
    spec:
      
      restartPolicy: Never
      
      volumes:
      
      
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pv-claim
      
      containers:
      
      
      - image: gcr.io/diffgram-open-core/default:0.16.0
      
        imagePullPolicy: Always
        name: pre-upgrade-alembic-hook
      
        envFrom:
        - configMapRef:
            name: db-migrations-configmap
        - secretRef:
            name:  db-migrations-secret
        # The actual migrations command
        command: ["sh","-c", "cd shared; export PYTHONPATH=/app; pip install sqlalchemy-utils==0.36.6;python /app/play_and_scripts/scripts/create_database.py; alembic upgrade head"]
---
# Source: diffgram/templates/hooks/database_pre_upgrade.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "diffgram-pre-upgrade"
  labels:
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "diffgram"
    app.kubernetes.io/version: 0.0.1
    helm.sh/chart: "diffgram-0.2.0"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "2"
spec:
  template:
    metadata:
      name: "diffgram"
      labels:
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/instance: "diffgram"
        helm.sh/chart: "diffgram-0.2.0"
    spec:
      restartPolicy: Never
      
      
      containers:
      
      
      - image: gcr.io/diffgram-open-core/default:0.16.0
      
        imagePullPolicy: Always
        name: pre-upgrade-alembic-hook
       
        envFrom:
        - configMapRef:
            name: db-migrations-configmap
        - secretRef:
            name:  db-migrations-secret
        # The actual migrations command
        command: ["sh","-c", "cd shared; export PYTHONPATH=/app; pip install sqlalchemy-utils==0.36.6;python /app/play_and_scripts/scripts/create_database.py; alembic upgrade head"]
MANIFEST:
---
# Source: diffgram/charts/cert-manager/templates/cainjector-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: diffgram-cert-manager-cainjector
  namespace: "default"
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "cainjector"
    helm.sh/chart: cert-manager-v1.1.0
---
# Source: diffgram/charts/cert-manager/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: diffgram-cert-manager
  namespace: "default"
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "controller"
    helm.sh/chart: cert-manager-v1.1.0
---
# Source: diffgram/charts/cert-manager/templates/webhook-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: diffgram-cert-manager-webhook
  namespace: "default"
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "webhook"
    helm.sh/chart: cert-manager-v1.1.0
---
# Source: diffgram/charts/rabbitmq/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: diffgram-rabbitmq
  namespace: "default"
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-9.1.4
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
secrets:
  - name: diffgram-rabbitmq
---
# Source: diffgram/charts/rabbitmq/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: diffgram-rabbitmq
  namespace: "default"
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-9.1.4
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  rabbitmq-password: "ZGlmZmdyYW0="
  
  rabbitmq-erlang-cookie: "S3htRjhHaXpYSXRNOUhEU2xLQTdKZFYyZXVvUHVpdmE="
---
# Source: diffgram/charts/rabbitmq/templates/tls-secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: diffgram-rabbitmq-certs
  namespace: "default"
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-9.1.4
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/tls
data:
  ca.crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLVENDQWhHZ0F3SUJBZ0lRZnBqUlNUdkZJZHpCdlZEZFJvZFJtVEFOQmdrcWhraUc5dzBCQVFzRkFEQWYKTVIwd0d3WURWUVFERXhSeVlXSmlhWFJ0Y1MxcGJuUmxjbTVoYkMxallUQWVGdzB5TWpBMU1qTXhOekE1TURsYQpGdzB5TXpBMU1qTXhOekE1TURsYU1COHhIVEFiQmdOVkJBTVRGSEpoWW1KcGRHMXhMV2x1ZEdWeWJtRnNMV05oCk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBNEZHaHZtYXEvMWxaTGx0WFJnRzMKUEEyOGRaeC9yUzRoNGxFUXRwNlNYV0VUUHF2RUthRndCZVg2aDRyRTZMZFZlR2RrRDBrTnZQWGx1cDNKSzZRRgo1a2lQVG5yaGkrRGNmRDNNY096VXJYcXBnL3BCb21HWVNrc1BCMEhDSFUweGJ1QUZ5bzZ2VlN4eDlSSFBZLyt1CkFlNUNRdzIwM0QxWHFXUHQ2VktmRTR2c3hjMi9PL0c1MTVVMWFlUmw5K1RFc1ArT1E4Nk5KeVQ3N0xMc0VYcXUKamNobFUyWjdvbnVqalhkMjg0ZTVKZEVLZ1YxbXZVWENSbncrSUxKTy84bFFlZlJEYjdrV2hPanh3akkvdm0wdQoydTBzV05kMHArVC96YVpwVjExbGkzM1VYWDIyTkRQazc0bk1hTnNMNVR5QUVnenoxY1RuSld4QjN4Q3Y3enFvCmp3SURBUUFCbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQXFRd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk9LZ3g5dkE0V2FUU3FyTwoxMzZYZUl0WjEzVmxNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNucHFYZlprU09mdUQvdEVwdUh6c2xoNWRVClA0aDllMXdZTEYrTGgxV1RUUU5KSUZXQXRaN0tnWkxJME9kS2RVb05EanlVcCtoMW40bGpqNU9pRkVpNlJ5SnMKbWlyVTRaMkJIUzhycHphcEtnc3pnZGg1SDk5bkZIbzh2ZXprdzBFSmlIMEk2Rlgrd0lkWitnSnB6QUpCTTBSWQphSzlHdmo4RENLdUk1dUtjbFRXVXpjVGVlTldOdmR3K0ZPbnRZMFhhYXJiVFRlYm9WQ2lTUkN6WHFYck50L2lDCjhZYW4xekxyODMrVENJUTJFWTlPSk1EWll2RHQxUnFFNzdDc0lhRGRhVXZBQmd5WWplOUVHSW5LUlFndU90bjkKUWdISUJlVkNEM3JLd1hhcXNPV3pMcVRjOGRWQTh2Tko1aXQwWTB1RHpGQjVESmx3NkRZa3gzRnhtZDJPCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
  tls.crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURvVENDQW9tZ0F3SUJBZ0lRQWxLVGdvN005VENJNGo4bWZ5aG1RREFOQmdrcWhraUc5dzBCQVFzRkFEQWYKTVIwd0d3WURWUVFERXhSeVlXSmlhWFJ0Y1MxcGJuUmxjbTVoYkMxallUQWVGdzB5TWpBMU1qTXhOekE1TURsYQpGdzB5TXpBMU1qTXhOekE1TURsYU1Cd3hHakFZQmdOVkJBTVRFV1JwWm1abmNtRnRMWEpoWW1KcGRHMXhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF5Q2lvZVVDUDYwOGtkUDROL244U0UzWEIKYklFNWg5ZGJtRkxjSzdoRDRxWUdFZXVuWm1kRVR2RmdvdnRhK1cwM0lSeGNocTBOSlB3TE9aYlArUGlucWRiOQpKYTUrc1p1SDNOZ1lselovc2k1QytXcnkvTVpzNFIyTWFQSFZmNngwUTh3Wnk0ejI3VFJYeWU2WWhDWUFKRUxICmtXN24yZTgrS3MwVDRWMWhtSkJTTC9pT05rZytMYWdWem9xZTI0d1JmeEhwRGIzQnFZQ1p6a1QzYVhCNEZBSDUKS0o0SjdYK1pscWZrZmxCaHgvTFhsZlNsVnJnZ2oxbkRUTVlENkNhSFhOb2F2d091VDQwOHJvdmxJeVpYSEZVcQpvdjBVekJnK2RsWWpLTlVScm92ZzdhQWxJMytLYlRPbis4YytiTGMvdm1rRWZrY1hDNElGSmYyWGs1Tnord0lECkFRQUJvNEhiTUlIWU1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlRpb01mYndPRm1rMHFxenRkKwpsM2lMV2RkMVpUQjRCZ05WSFJFRWNUQnZnaTBxTG1ScFptWm5jbUZ0TFhKaFltSnBkRzF4TG1SbFptRjFiSFF1CmMzWmpMbU5zZFhOMFpYSXViRzlqWVd5Q0syUnBabVpuY21GdExYSmhZbUpwZEcxeExtUmxabUYxYkhRdWMzWmoKTG1Oc2RYTjBaWEl1Ykc5allXeUNFV1JwWm1abmNtRnRMWEpoWW1KcGRHMXhNQTBHQ1NxR1NJYjNEUUVCQ3dVQQpBNElCQVFBWjBMTXBxMnBOYW10WmN2TGttZ2haRWFVbEVudmlTZFNQNGVjYmx6eFpNZXkwOVdXYlpJdlpiTlp1CkM2bVhNclVQZkFhb0pKSjkyRlJQR3RmWkxQeVFoWTYxZ291ZFJuOFltQ2p2Q3V2N0o2V1R6dHJwUEd4S1ltN20Kb2JSTWl3RnZ4MGNGK0xlcDU5RHFuUUJUNHFrZXkrUFRmeGhWVzZYOHRFaXZrL3hjQk1OV2daWFJFRTdpd1BocgpMWFRsRjc3MnZ3QnZYdU1hYjAzUUV3V2pmd2tRR2xZcWFOU3BVTnNTdEd6b25yV3BzTDJEV2FOL29nWXVuQjRiCmQvNGcwUDlWbVQ1K2FFSUNyZVFNNHpYNysxZ0JGNVNiNmtUTUtsb2x3eFpoaU1GQVZqYkpsekgvMTc5VldwNEEKa0dQdXVBemFvdFFVcnpKalJ3cHRHa0xES3pLLwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
  tls.key: "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeUNpb2VVQ1A2MDhrZFA0Ti9uOFNFM1hCYklFNWg5ZGJtRkxjSzdoRDRxWUdFZXVuClptZEVUdkZnb3Z0YStXMDNJUnhjaHEwTkpQd0xPWmJQK1BpbnFkYjlKYTUrc1p1SDNOZ1lselovc2k1QytXcnkKL01aczRSMk1hUEhWZjZ4MFE4d1p5NHoyN1RSWHllNlloQ1lBSkVMSGtXN24yZTgrS3MwVDRWMWhtSkJTTC9pTwpOa2crTGFnVnpvcWUyNHdSZnhIcERiM0JxWUNaemtUM2FYQjRGQUg1S0o0SjdYK1pscWZrZmxCaHgvTFhsZlNsClZyZ2dqMW5EVE1ZRDZDYUhYTm9hdndPdVQ0MDhyb3ZsSXlaWEhGVXFvdjBVekJnK2RsWWpLTlVScm92ZzdhQWwKSTMrS2JUT24rOGMrYkxjL3Zta0Vma2NYQzRJRkpmMlhrNU56K3dJREFRQUJBb0lCQUVDRXdwR2JHd2tKa01IWgpacDlqVEd0VGFNN1Y5THB4MDhlTTVnVjl0dndtOGd2eXZ4b0dMWUdZMHNLV2JTTzdiYXJSbm8yVzJJYlVhN1hiCmhCeEg0cHVmZmlnWVVDUmw4dXhnQjhVdVB3a3JXbEZWaFErdjBrYmFKSGxyZ3B0TjlvZ29FU1NJd3N1Qk5NOFYKaHJvS0diK1dld2ZKRFJrMXdmOC83YW1XVlRBOHV5STVOUFRVU1U2OWxyRjdHWnZVRjNSbEhzZHlVMDI2QVBESQo3eE16TG8zZWRaaEM4S3BXTlg4SkhGcE9nQkptSVJuQ2gxYXJuazR2Z0VYdXZKaTJmdlhyejNRSTlScVp5MlIrCmZJaWc1dUJGajZUVXI2WXNLSWk2aVNwUUNOZkt1T2t1cys4Mmx4WGg3TVB1ZWliWlJqQnZKeFpuT2Yrbm5xK1oKSlJOeEQ0RUNnWUVBNFp2UnBXWU1DUFpBSVJnbW5mNnQvc29NODV2SXRlYXJjUmJCZERoSk1Mb01ZeFFwS1EvMwpVMUR0bHNNcm11Y2Ywa1FQU0tBM2VRQ0tuQlVJQ1NpNTg5cmJIVXdWQmlJMGtrMHRPUGl0VTUwNThtU3NuSXp1Cm1KY1k1WEhBYzJDbWhicE9reURkQlJ0Qzk2R0h2aVZQdmVtRWRjZDI4RmZKcVhqN1Z0MG9McnNDZ1lFQTR4OHgKbUhzQkFoT2lUT3ZKWEMvOXBtbGsyVjlJRlhlY1FWNDlTZEo0UG8ySTZscXdJRGQ1NTNlMVpCaXYyc0RtOHd2NgpROTR0dEdyMEQyTklmM05GZGs5RmZYSGNZWHZzUkYxWkZldmFHWWFLckZIOWt3M2hOVUgwVTRldTYxclUyc3V2Cjd6bkJQTGFlaCtFR2U3ZnVHdW4vc2owRkduejVYbStuMnBpbm04RUNnWUVBejFDL2Vxem1mRW5GTG1RaUFHZXEKL2dvdmtxQmg5UDJPSjNLUXZMcUlUelYzOG9meE51R01GY3kxTnlnTDV1RmlOWGNEVUdxaDd4aFhSd3h3Z1BJaQp4bm9qaGEySFdFYVFacXh5MVBwM1UvR1Q4VEVnQ1EvY3BPMmNIQ1BHaEgrWkppUEkxcHlKWFlycW8rR1VlbCtSCkFtUVdxNkJxcEhzWFBodUZZeElCUGNjQ2dZQWVEMmpmQjVpd2o2eXhoWnVYQ2ZzR1pYaWxsSWpUM29yZDAvMUUKb2dpc0xzdHFTU3A2ZVIwM1Y0NjRldFA3bmdCek5xaWZCdThCckE0MVl5eWJRY1IxempRaVVFbWMxV3dGK0Z6cwpHOVUzLzZpbStnc1h4WVNES2dHT2RLemdGWnVLZ2Q3OVNLV2N4WWJoOFJTTWwyRjZTbkkvUXZoRDh6cUdGejBlCkg0by9nUUtCZ0I2enlaUFBuYk84cEx6cThaZk1ETHFCZmF2VmVQRXplS3pCS1RDVUhHbkc3MytRak14V1hYVTkKUWxNQm82MjZ3RGljNmdBOEg3VzA3cUhDRVdqejRYU3JEK0dIOVdWcDR4NU9waVRyZkNhR0ZjdWdIaG1yR2htZwpWUnFpKzVjV2ZGUmJkaU51RGsySG5yWUllcFhhSkNBNGZOcWJveGtkandMYkY5K1cyK0VKCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
---
# Source: diffgram/templates/default/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: diffgram-default-secrets
type: Opaque
stringData:
  STRIPE_API_KEY: none
  DIFFGRAM_AWS_ACCESS_KEY_SECRET: write_your_aws_access_key_secret
  DIFFGRAM_AWS_ACCESS_KEY_ID: write_your_aws_access_key
  _ANALYTICS_WRITE_KEY: provided_by_diffgram_team
  MAILGUN_KEY: provided_by_diffgram_team
  HUB_SPOT_KEY: provided_by_diffgram_team
  SECRET_KEY: provided_by_diffgram_team
  INTER_SERVICE_SECRET: provided_by_diffgram_team
  FERNET_KEY: NeL_RED6zZ1XF3XT7Yd1hzFPYyebrg6UdkECTOLHEdI=
  
  DATABASE_URL:  "postgresql+psycopg2://postgres:postgres@diffgram-postgres/postgres"
  
  
  
  USER_PASSWORDS_SECRET:  provided_by_diffgram_team
  DIFFGRAM_AZURE_CONNECTION_STRING:  put_your_azure_connection_string_here
  RABBITMQ_DEFAULT_PASS:  diffgram
---
# Source: diffgram/templates/eventhandlers/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: diffgram-eventhandlers-secrets
type: Opaque
stringData:
  STRIPE_API_KEY: none
  DIFFGRAM_AWS_ACCESS_KEY_SECRET: write_your_aws_access_key_secret
  DIFFGRAM_AWS_ACCESS_KEY_ID: write_your_aws_access_key
  _ANALYTICS_WRITE_KEY: provided_by_diffgram_team
  MAILGUN_KEY: provided_by_diffgram_team
  HUB_SPOT_KEY: provided_by_diffgram_team
  SECRET_KEY: provided_by_diffgram_team
  INTER_SERVICE_SECRET: provided_by_diffgram_team
  FERNET_KEY: NeL_RED6zZ1XF3XT7Yd1hzFPYyebrg6UdkECTOLHEdI=
  
  DATABASE_URL:  "postgresql+psycopg2://postgres:postgres@diffgram-postgres/postgres"
  
  
  
  USER_PASSWORDS_SECRET:  provided_by_diffgram_team
  DIFFGRAM_AZURE_CONNECTION_STRING:  put_your_azure_connection_string_here
  RABBITMQ_DEFAULT_PASS:  diffgram
---
# Source: diffgram/templates/walrus/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: diffgram-walrus-secrets
type: Opaque
stringData:
  STRIPE_API_KEY: none
  DIFFGRAM_AWS_ACCESS_KEY_SECRET: write_your_aws_access_key_secret
  DIFFGRAM_AWS_ACCESS_KEY_ID: write_your_aws_access_key
  _ANALYTICS_WRITE_KEY: provided_by_diffgram_team
  MAILGUN_KEY: provided_by_diffgram_team
  HUB_SPOT_KEY: provided_by_diffgram_team
  SECRET_KEY: provided_by_diffgram_team
  INTER_SERVICE_SECRET: provided_by_diffgram_team
  FERNET_KEY: NeL_RED6zZ1XF3XT7Yd1hzFPYyebrg6UdkECTOLHEdI=
  
  DATABASE_URL:  "postgresql+psycopg2://postgres:postgres@diffgram-postgres/postgres"
  
  
  
  USER_PASSWORDS_SECRET:  provided_by_diffgram_team
  DIFFGRAM_AZURE_CONNECTION_STRING:  put_your_azure_connection_string_here
  RABBITMQ_DEFAULT_PASS:  diffgram
---
# Source: diffgram/charts/rabbitmq/templates/configuration.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: diffgram-rabbitmq-config
  namespace: "default"
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-9.1.4
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
data:
  rabbitmq.conf: |-
    ## Username and password
    ##
    default_user = user
    default_pass = CHANGEME
    ## Clustering
    ##
    cluster_formation.peer_discovery_backend  = rabbit_peer_discovery_k8s
    cluster_formation.k8s.host = kubernetes.default
    cluster_formation.node_cleanup.interval = 10
    cluster_formation.node_cleanup.only_log_warning = true
    cluster_partition_handling = autoheal
    # queue master locator
    queue_master_locator = min-masters
    # enable guest user
    loopback_users.guest = false
    #default_vhost = default-vhost
    #disk_free_limit.absolute = 50MB
    ssl_options.verify = verify_peer
    listeners.ssl.default = 5671
    ssl_options.fail_if_no_peer_cert = true
    ssl_options.cacertfile = /opt/bitnami/rabbitmq/certs/ca_certificate.pem
    ssl_options.certfile = /opt/bitnami/rabbitmq/certs/server_certificate.pem
    ssl_options.keyfile = /opt/bitnami/rabbitmq/certs/server_key.pem
---
# Source: diffgram/templates/default/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: diffgram-default-configmap
data:
  USERDOMAIN: kubernetes
  DIFFGRAM_SYSTEM_MODE: production
  DIFFGRAM_STATIC_STORAGE_PROVIDER: aws
  DIFFGRAM_S3_BUCKET_NAME: none
  ML__DIFFGRAM_S3_BUCKET_NAME: diffgram-testing
  GOOGLE_APPLICATION_CREDENTIALS: /etc/gcp/sa_credentials.json # Check the volume in deployment.yaml and service_account_secret.yaml
  CLOUD_STORAGE_BUCKET:  diffgram-testing
  ML__CLOUD_STORAGE_BUCKET:  diffgram-testing
  URL_BASE: example.com
  WALRUS_SERVICE_URL_BASE: example.com
  SERVICE_ACCOUNT_FULL_PATH: /etc/gcp/sa_credentials.json
  DIFFGRAM_AZURE_CONTAINER_NAME: none
  ML__DIFFGRAM_AZURE_CONTAINER_NAME: none
  DIFFGRAM_INSTALL_FINGERPRINT: helm_fingerprint_default
  DIFFGRAM_VERSION_TAG: 0.16.0
  DIFFGRAM_HOST_OS: helm_os_default
  DATABASE_CONNECTION_POOL_SIZE: "10"
  PYTHONPATH: "/app:/app/shared:/"
  PROCESS_MEDIA_NUM_VIDEO_THREADS: "1"
  PROCESS_MEDIA_NUM_FRAME_THREADS: "4"
  NEW_RELIC_LICENSE_KEY: none
  EMAIL_DOMAIN_NAME: example.com
  ALLOW_EVENTHUB: "False"
  EMAIL_VALIDATION: "False"
  ALLOW_STRIPE_BILLING: "False"
  IS_OPEN_SOURCE: "True"
  DIFFGRAM_MINIO_ENDPOINT_URL: none
  DIFFGRAM_MINIO_ACCESS_KEY_ID: none
  DIFFGRAM_MINIO_ACCESS_KEY_SECRET: none
  DIFFGRAM_MINIO_DISABLED_SSL_VERIFY: none
  RABBITMQ_HOST: diffgram-rabbitmq
  RABBITMQ_PORT: 5672
  RABBITMQ_DEFAULT_USER: user
---
# Source: diffgram/templates/eventhandlers/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: diffgram-eventhandlers-configmap
data:
  USERDOMAIN: kubernetes
  DIFFGRAM_SYSTEM_MODE: production
  DIFFGRAM_STATIC_STORAGE_PROVIDER: aws
  DIFFGRAM_S3_BUCKET_NAME: none
  ML__DIFFGRAM_S3_BUCKET_NAME: diffgram-testing
  GOOGLE_APPLICATION_CREDENTIALS: /etc/gcp/sa_credentials.json # Check the volume in deployment.yaml and service_account_secret.yaml
  CLOUD_STORAGE_BUCKET:  diffgram-testing
  ML__CLOUD_STORAGE_BUCKET:  diffgram-testing
  URL_BASE: example.com
  WALRUS_SERVICE_URL_BASE: example.com
  SERVICE_ACCOUNT_FULL_PATH: /etc/gcp/sa_credentials.json
  DIFFGRAM_AZURE_CONTAINER_NAME: none
  ML__DIFFGRAM_AZURE_CONTAINER_NAME: none
  DIFFGRAM_INSTALL_FINGERPRINT: helm_fingerprint_default
  DIFFGRAM_VERSION_TAG: 0.16.0
  DIFFGRAM_HOST_OS: helm_os_default
  DATABASE_CONNECTION_POOL_SIZE: "10"
  PYTHONPATH: "/app:/app/shared:/"
  PROCESS_MEDIA_NUM_VIDEO_THREADS: "1"
  PROCESS_MEDIA_NUM_FRAME_THREADS: "4"
  NEW_RELIC_LICENSE_KEY: none
  EMAIL_DOMAIN_NAME: example.com
  ALLOW_EVENTHUB: "False"
  EMAIL_VALIDATION: "False"
  ALLOW_STRIPE_BILLING: "False"
  IS_OPEN_SOURCE: "True"
  DIFFGRAM_MINIO_ENDPOINT_URL: none
  DIFFGRAM_MINIO_ACCESS_KEY_ID: none
  DIFFGRAM_MINIO_ACCESS_KEY_SECRET: none
  DIFFGRAM_MINIO_DISABLED_SSL_VERIFY: none
  RABBITMQ_HOST: diffgram-rabbitmq
  RABBITMQ_PORT: 5672
  RABBITMQ_DEFAULT_USER: user
---
# Source: diffgram/templates/ingress_configmap.yaml
apiVersion: v1
kind: ConfigMap
data:
  
  enable-underscores-in-headers: "true"
  ignore-invalid-headers: "false"
  use-gzip: "true" # ENABLE GZIP COMPRESSION
  gzip-types: "*" # SPECIFY MIME TYPES TO COMPRESS ("*" FOR ALL) 
metadata:
  name: ingress-nginx-controller
  namespace: default
---
# Source: diffgram/templates/walrus/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: diffgram-walrus-configmap
data:
  USERDOMAIN: kubernetes
  DIFFGRAM_SYSTEM_MODE: production
  DIFFGRAM_STATIC_STORAGE_PROVIDER: aws
  DIFFGRAM_S3_BUCKET_NAME: none
  ML__DIFFGRAM_S3_BUCKET_NAME: diffgram-testing
  GOOGLE_APPLICATION_CREDENTIALS: /etc/gcp/sa_credentials.json # Check the volume in deployment.yaml and service_account_secret.yaml
  CLOUD_STORAGE_BUCKET:  diffgram-testing
  ML__CLOUD_STORAGE_BUCKET:  diffgram-testing
  URL_BASE: example.com
  WALRUS_SERVICE_URL_BASE: example.com
  SERVICE_ACCOUNT_FULL_PATH: /etc/gcp/sa_credentials.json
  DIFFGRAM_AZURE_CONTAINER_NAME: none
  ML__DIFFGRAM_AZURE_CONTAINER_NAME: none
  DIFFGRAM_INSTALL_FINGERPRINT: helm_fingerprint_default
  DIFFGRAM_VERSION_TAG: 0.16.0
  DIFFGRAM_HOST_OS: helm_os_default
  DATABASE_CONNECTION_POOL_SIZE: "10"
  PYTHONPATH: "/app:/app/shared:/"
  PROCESS_MEDIA_NUM_VIDEO_THREADS: "1"
  PROCESS_MEDIA_NUM_FRAME_THREADS: "4"
  NEW_RELIC_LICENSE_KEY: none
  EMAIL_DOMAIN_NAME: example.com
  ALLOW_EVENTHUB: "False"
  EMAIL_VALIDATION: "False"
  ALLOW_STRIPE_BILLING: "False"
  IS_OPEN_SOURCE: "True"
  DIFFGRAM_MINIO_ENDPOINT_URL: none
  DIFFGRAM_MINIO_ACCESS_KEY_ID: none
  DIFFGRAM_MINIO_ACCESS_KEY_SECRET: none
  DIFFGRAM_MINIO_DISABLED_SSL_VERIFY: none
  RABBITMQ_HOST: diffgram-rabbitmq
  RABBITMQ_PORT: 5672
  RABBITMQ_DEFAULT_USER: user
---
# Source: diffgram/charts/cert-manager/templates/cainjector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: diffgram-cert-manager-cainjector
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "cainjector"
    helm.sh/chart: cert-manager-v1.1.0
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "create", "update", "patch"]
  - apiGroups: ["admissionregistration.k8s.io"]
    resources: ["validatingwebhookconfigurations", "mutatingwebhookconfigurations"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["apiregistration.k8s.io"]
    resources: ["apiservices"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["auditregistration.k8s.io"]
    resources: ["auditsinks"]
    verbs: ["get", "list", "watch", "update"]
---
# Source: diffgram/charts/cert-manager/templates/rbac.yaml
# Issuer controller role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: diffgram-cert-manager-controller-issuers
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "controller"
    helm.sh/chart: cert-manager-v1.1.0
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["issuers", "issuers/status"]
    verbs: ["update"]
  - apiGroups: ["cert-manager.io"]
    resources: ["issuers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch", "create", "update", "delete"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
---
# Source: diffgram/charts/cert-manager/templates/rbac.yaml
# ClusterIssuer controller role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: diffgram-cert-manager-controller-clusterissuers
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "controller"
    helm.sh/chart: cert-manager-v1.1.0
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["clusterissuers", "clusterissuers/status"]
    verbs: ["update"]
  - apiGroups: ["cert-manager.io"]
    resources: ["clusterissuers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch", "create", "update", "delete"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
---
# Source: diffgram/charts/cert-manager/templates/rbac.yaml
# Certificates controller role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: diffgram-cert-manager-controller-certificates
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "controller"
    helm.sh/chart: cert-manager-v1.1.0
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates", "certificates/status", "certificaterequests", "certificaterequests/status"]
    verbs: ["update"]
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates", "certificaterequests", "clusterissuers", "issuers"]
    verbs: ["get", "list", "watch"]
  # We require these rules to support users with the OwnerReferencesPermissionEnforcement
  # admission controller enabled:
  # https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#ownerreferencespermissionenforcement
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates/finalizers", "certificaterequests/finalizers"]
    verbs: ["update"]
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["orders"]
    verbs: ["create", "delete", "get", "list", "watch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch", "create", "update", "delete"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
---
# Source: diffgram/charts/cert-manager/templates/rbac.yaml
# Orders controller role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: diffgram-cert-manager-controller-orders
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "controller"
    helm.sh/chart: cert-manager-v1.1.0
rules:
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["orders", "orders/status"]
    verbs: ["update"]
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["orders", "challenges"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["cert-manager.io"]
    resources: ["clusterissuers", "issuers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["challenges"]
    verbs: ["create", "delete"]
  # We require these rules to support users with the OwnerReferencesPermissionEnforcement
  # admission controller enabled:
  # https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#ownerreferencespermissionenforcement
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["orders/finalizers"]
    verbs: ["update"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
---
# Source: diffgram/charts/cert-manager/templates/rbac.yaml
# Challenges controller role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: diffgram-cert-manager-controller-challenges
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "controller"
    helm.sh/chart: cert-manager-v1.1.0
rules:
  # Use to update challenge resource status
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["challenges", "challenges/status"]
    verbs: ["update"]
  # Used to watch challenge resources
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["challenges"]
    verbs: ["get", "list", "watch"]
  # Used to watch challenges, issuer and clusterissuer resources
  - apiGroups: ["cert-manager.io"]
    resources: ["issuers", "clusterissuers"]
    verbs: ["get", "list", "watch"]
  # Need to be able to retrieve ACME account private key to complete challenges
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]
  # Used to create events
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
  # HTTP01 rules
  - apiGroups: [""]
    resources: ["pods", "services"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: ["extensions"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch", "create", "delete", "update"]
  # We require the ability to specify a custom hostname when we are creating
  # new ingress resources.
  # See: https://github.com/openshift/origin/blob/21f191775636f9acadb44fa42beeb4f75b255532/pkg/route/apiserver/admission/ingress_admission.go#L84-L148
  - apiGroups: ["route.openshift.io"]
    resources: ["routes/custom-host"]
    verbs: ["create"]
  # We require these rules to support users with the OwnerReferencesPermissionEnforcement
  # admission controller enabled:
  # https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#ownerreferencespermissionenforcement
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["challenges/finalizers"]
    verbs: ["update"]
  # DNS01 rules (duplicated above)
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]
---
# Source: diffgram/charts/cert-manager/templates/rbac.yaml
# ingress-shim controller role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: diffgram-cert-manager-controller-ingress-shim
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "controller"
    helm.sh/chart: cert-manager-v1.1.0
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates", "certificaterequests"]
    verbs: ["create", "update", "delete"]
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates", "certificaterequests", "issuers", "clusterissuers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["extensions"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch"]
  # We require these rules to support users with the OwnerReferencesPermissionEnforcement
  # admission controller enabled:
  # https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#ownerreferencespermissionenforcement
  - apiGroups: ["extensions"]
    resources: ["ingresses/finalizers"]
    verbs: ["update"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
---
# Source: diffgram/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: diffgram-cert-manager-view
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "controller"
    helm.sh/chart: cert-manager-v1.1.0
    rbac.authorization.k8s.io/aggregate-to-view: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates", "certificaterequests", "issuers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["challenges", "orders"]
    verbs: ["get", "list", "watch"]
---
# Source: diffgram/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: diffgram-cert-manager-edit
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "controller"
    helm.sh/chart: cert-manager-v1.1.0
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates", "certificaterequests", "issuers"]
    verbs: ["create", "delete", "deletecollection", "patch", "update"]
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["challenges", "orders"]
    verbs: ["get", "list", "watch"]
---
# Source: diffgram/charts/cert-manager/templates/cainjector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: diffgram-cert-manager-cainjector
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "cainjector"
    helm.sh/chart: cert-manager-v1.1.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: diffgram-cert-manager-cainjector
subjects:
  - name: diffgram-cert-manager-cainjector
    namespace: "default"
    kind: ServiceAccount
---
# Source: diffgram/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: diffgram-cert-manager-controller-issuers
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "controller"
    helm.sh/chart: cert-manager-v1.1.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: diffgram-cert-manager-controller-issuers
subjects:
  - name: diffgram-cert-manager
    namespace: "default"
    kind: ServiceAccount
---
# Source: diffgram/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: diffgram-cert-manager-controller-clusterissuers
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "controller"
    helm.sh/chart: cert-manager-v1.1.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: diffgram-cert-manager-controller-clusterissuers
subjects:
  - name: diffgram-cert-manager
    namespace: "default"
    kind: ServiceAccount
---
# Source: diffgram/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: diffgram-cert-manager-controller-certificates
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "controller"
    helm.sh/chart: cert-manager-v1.1.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: diffgram-cert-manager-controller-certificates
subjects:
  - name: diffgram-cert-manager
    namespace: "default"
    kind: ServiceAccount
---
# Source: diffgram/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: diffgram-cert-manager-controller-orders
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "controller"
    helm.sh/chart: cert-manager-v1.1.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: diffgram-cert-manager-controller-orders
subjects:
  - name: diffgram-cert-manager
    namespace: "default"
    kind: ServiceAccount
---
# Source: diffgram/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: diffgram-cert-manager-controller-challenges
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "controller"
    helm.sh/chart: cert-manager-v1.1.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: diffgram-cert-manager-controller-challenges
subjects:
  - name: diffgram-cert-manager
    namespace: "default"
    kind: ServiceAccount
---
# Source: diffgram/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: diffgram-cert-manager-controller-ingress-shim
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "controller"
    helm.sh/chart: cert-manager-v1.1.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: diffgram-cert-manager-controller-ingress-shim
subjects:
  - name: diffgram-cert-manager
    namespace: "default"
    kind: ServiceAccount
---
# Source: diffgram/charts/cert-manager/templates/cainjector-rbac.yaml
# leader election rules
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: diffgram-cert-manager-cainjector:leaderelection
  namespace: kube-system
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "cainjector"
    helm.sh/chart: cert-manager-v1.1.0
rules:
  # Used for leader election by the controller
  # cert-manager-cainjector-leader-election is used by the CertificateBased injector controller
  #   see cmd/cainjector/start.go#L113
  # cert-manager-cainjector-leader-election-core is used by the SecretBased injector controller
  #   see cmd/cainjector/start.go#L137
  - apiGroups: [""]
    resources: ["configmaps"]
    resourceNames: ["cert-manager-cainjector-leader-election", "cert-manager-cainjector-leader-election-core"]
    verbs: ["get", "update", "patch"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["create"]
---
# Source: diffgram/charts/cert-manager/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: diffgram-cert-manager:leaderelection
  namespace: kube-system
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "controller"
    helm.sh/chart: cert-manager-v1.1.0
rules:
  # Used for leader election by the controller
  - apiGroups: [""]
    resources: ["configmaps"]
    resourceNames: ["cert-manager-controller"]
    verbs: ["get", "update", "patch"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["create"]
---
# Source: diffgram/charts/cert-manager/templates/webhook-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: diffgram-cert-manager-webhook:dynamic-serving
  namespace: "default"
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "webhook"
    helm.sh/chart: cert-manager-v1.1.0
rules:
- apiGroups: [""]
  resources: ["secrets"]
  resourceNames:
  - 'diffgram-cert-manager-webhook-ca'
  verbs: ["get", "list", "watch", "update"]
# It's not possible to grant CREATE permission on a single resourceName.
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["create"]
---
# Source: diffgram/charts/rabbitmq/templates/role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: diffgram-rabbitmq-endpoint-reader
  namespace: "default"
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-9.1.4
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["get"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create"]
---
# Source: diffgram/charts/cert-manager/templates/cainjector-rbac.yaml
# grant cert-manager permission to manage the leaderelection configmap in the
# leader election namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: diffgram-cert-manager-cainjector:leaderelection
  namespace: kube-system
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "cainjector"
    helm.sh/chart: cert-manager-v1.1.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: diffgram-cert-manager-cainjector:leaderelection
subjects:
  - kind: ServiceAccount
    name: diffgram-cert-manager-cainjector
    namespace: default
---
# Source: diffgram/charts/cert-manager/templates/rbac.yaml
# grant cert-manager permission to manage the leaderelection configmap in the
# leader election namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: diffgram-cert-manager:leaderelection
  namespace: kube-system
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "controller"
    helm.sh/chart: cert-manager-v1.1.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: diffgram-cert-manager:leaderelection
subjects:
  - apiGroup: ""
    kind: ServiceAccount
    name: diffgram-cert-manager
    namespace: default
---
# Source: diffgram/charts/cert-manager/templates/webhook-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: diffgram-cert-manager-webhook:dynamic-serving
  namespace: "default"
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "webhook"
    helm.sh/chart: cert-manager-v1.1.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: diffgram-cert-manager-webhook:dynamic-serving
subjects:
- apiGroup: ""
  kind: ServiceAccount
  name: diffgram-cert-manager-webhook
  namespace: default
---
# Source: diffgram/charts/rabbitmq/templates/rolebinding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: diffgram-rabbitmq-endpoint-reader
  namespace: "default"
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-9.1.4
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: diffgram-rabbitmq
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: diffgram-rabbitmq-endpoint-reader
---
# Source: diffgram/charts/cert-manager/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: diffgram-cert-manager
  namespace: "default"
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "controller"
    helm.sh/chart: cert-manager-v1.1.0
spec:
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 9402
      targetPort: 9402
  selector:
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/component: "controller"
---
# Source: diffgram/charts/cert-manager/templates/webhook-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: diffgram-cert-manager-webhook
  namespace: "default"
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "webhook"
    helm.sh/chart: cert-manager-v1.1.0
spec:
  type: ClusterIP
  ports:
  - name: https
    port: 443
    targetPort: 10250
  selector:
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/component: "webhook"
---
# Source: diffgram/charts/rabbitmq/templates/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: diffgram-rabbitmq-headless
  namespace: "default"
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-9.1.4
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
spec:
  clusterIP: None
  ports:
    - name: epmd
      port: 4369
      targetPort: epmd
    - name: amqp
      port: 5672
      targetPort: amqp
    - name: amqp-ssl
      port: 5671
      targetPort: amqp-tls
    - name: dist
      port: 25672
      targetPort: dist
    - name: http-stats
      port: 15672
      targetPort: stats
  selector: 
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/instance: diffgram
  publishNotReadyAddresses: true
---
# Source: diffgram/charts/rabbitmq/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: diffgram-rabbitmq
  namespace: "default"
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-9.1.4
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: amqp
      port: 5672
      targetPort: amqp
      nodePort: null
    - name: amqp-ssl
      port: 5671
      targetPort: amqp-ssl
      nodePort: null
    - name: epmd
      port: 4369
      targetPort: epmd
      nodePort: null
    - name: dist
      port: 25672
      targetPort: dist
      nodePort: null
    - name: http-stats
      port: 15672
      targetPort: stats
      nodePort: null
  selector: 
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/instance: diffgram
---
# Source: diffgram/templates/default/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: diffgram-default
  name: diffgram-default
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: diffgram-default
  type: ClusterIP
---
# Source: diffgram/templates/eventhandlers/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: diffgram-eventhandlers
  name: diffgram-eventhandlers
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: diffgram-eventhandlers
  type: ClusterIP
---
# Source: diffgram/templates/frontend/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: frontend
  name: frontend
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 80
  selector:
    app: frontend
  type: ClusterIP
---
# Source: diffgram/templates/postgres/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: diffgram-postgres
  namespace: default
spec:
  ports:
    - port: 5432
  selector:
    app: postgres
---
# Source: diffgram/templates/walrus/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: diffgram-walrus
  name: diffgram-walrus
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: diffgram-walrus
  type: ClusterIP
---
# Source: diffgram/charts/cert-manager/templates/cainjector-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: diffgram-cert-manager-cainjector
  namespace: "default"
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "cainjector"
    helm.sh/chart: cert-manager-v1.1.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cainjector
      app.kubernetes.io/instance: diffgram
      app.kubernetes.io/component: "cainjector"
  template:
    metadata:
      labels:
        app: cainjector
        app.kubernetes.io/name: cainjector
        app.kubernetes.io/instance: diffgram
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: "cainjector"
        helm.sh/chart: cert-manager-v1.1.0
    spec:
      serviceAccountName: diffgram-cert-manager-cainjector
      containers:
        - name: cert-manager
          image: "quay.io/jetstack/cert-manager-cainjector:v1.1.0"
          imagePullPolicy: IfNotPresent
          args:
          - --v=2
          - --leader-election-namespace=kube-system
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          resources:
            {}
---
# Source: diffgram/charts/cert-manager/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: diffgram-cert-manager
  namespace: "default"
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "controller"
    helm.sh/chart: cert-manager-v1.1.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/instance: diffgram
      app.kubernetes.io/component: "controller"
  template:
    metadata:
      labels:
        app: cert-manager
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/instance: diffgram
        app.kubernetes.io/component: "controller"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: cert-manager-v1.1.0
      annotations:
        prometheus.io/path: "/metrics"
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9402'
    spec:
      serviceAccountName: diffgram-cert-manager
      containers:
        - name: cert-manager
          image: "quay.io/jetstack/cert-manager-controller:v1.1.0"
          imagePullPolicy: IfNotPresent
          args:
          - --v=2
          - --cluster-resource-namespace=$(POD_NAMESPACE)
          - --leader-election-namespace=kube-system
          ports:
          - containerPort: 9402
            protocol: TCP
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          resources:
            {}
---
# Source: diffgram/charts/cert-manager/templates/webhook-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: diffgram-cert-manager-webhook
  namespace: "default"
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "webhook"
    helm.sh/chart: cert-manager-v1.1.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: webhook
      app.kubernetes.io/instance: diffgram
      app.kubernetes.io/component: "webhook"
  template:
    metadata:
      labels:
        app: webhook
        app.kubernetes.io/name: webhook
        app.kubernetes.io/instance: diffgram
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: "webhook"
        helm.sh/chart: cert-manager-v1.1.0
    spec:
      serviceAccountName: diffgram-cert-manager-webhook
      containers:
        - name: cert-manager
          image: "quay.io/jetstack/cert-manager-webhook:v1.1.0"
          imagePullPolicy: IfNotPresent
          args:
          - --v=2
          - --secure-port=10250
          - --dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)
          - --dynamic-serving-ca-secret-name=diffgram-cert-manager-webhook-ca
          - --dynamic-serving-dns-names=diffgram-cert-manager-webhook,diffgram-cert-manager-webhook.default,diffgram-cert-manager-webhook.default.svc
          ports:
          - name: https
            containerPort: 10250
          livenessProbe:
            httpGet:
              path: /livez
              port: 6080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthz
              port: 6080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          resources:
            {}
---
# Source: diffgram/templates/default/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: diffgram-default
  name: diffgram-default
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: diffgram-default
  template:
    metadata:
      labels:
        app: diffgram-default
    spec:
      
      
      volumes:
      
      initContainers:
      - name: check-db-ready
        image: postgres:11
        
        command: ['sh', '-c',
                  'until pg_isready -h diffgram-postgres -p 5432;
          do echo waiting for database; sleep 2; done;']
        
        
        
      containers:
      
      
      - image: gcr.io/diffgram-open-core/default:0.16.0
      
        imagePullPolicy: Always
        name: diffgram-default
        ports:
        - containerPort: 8080
      
        envFrom:
        - configMapRef:
            name: diffgram-default-configmap
        - secretRef:
            name: diffgram-default-secrets
        resources:
          requests:
            cpu: 1.0
            memory: 1G
          limits:
            cpu: 2.0
            memory: 2G
---
# Source: diffgram/templates/eventhandlers/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: diffgram-eventhandlers
  name: diffgram-eventhandlers
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: diffgram-eventhandlers
  template:
    metadata:
      labels:
        app: diffgram-eventhandlers
    spec:
      
      
      volumes:
      
      initContainers:
      - name: check-db-ready
        image: postgres:11
        
        command: ['sh', '-c',
                  'until pg_isready -h diffgram-postgres -p 5432;
          do echo waiting for database; sleep 2; done;']
        
        
        
      containers:
      
      
      - image: gcr.io/diffgram-open-core/eventhandlers:0.16.0
      
        imagePullPolicy: Always
        name: diffgram-default
        ports:
        - containerPort: 8080
      
        envFrom:
        - configMapRef:
            name: diffgram-eventhandlers-configmap
        - secretRef:
            name: diffgram-eventhandlers-secrets
        resources:
          requests:
            cpu: 1.0
            memory: 1G
          limits:
            cpu: 2.0
            memory: 2G
---
# Source: diffgram/templates/frontend/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: frontend
  name: frontend
  namespace: default
spec:
  replicas: 1

  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      
      
      containers:
      
      
      - image: gcr.io/diffgram-open-core/frontend:0.16.0
      
        imagePullPolicy: Always
        name: frontend
        resources:
          requests:
            cpu: 1.0
            memory: 1G
          limits:
            cpu: 1.0
            memory: 1G
---
# Source: diffgram/templates/walrus/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: diffgram-walrus
  name: diffgram-walrus
  namespace:
spec:
  replicas: 1
  selector:
    matchLabels:
      app: diffgram-walrus
  template:
    metadata:
      labels:
        app: diffgram-walrus
    spec:
      
      
      volumes:
      
      - name: empty-dir
        emptyDir: {}
      initContainers:
      - name: check-db-ready
        image: postgres:11
        
        command: ['sh', '-c',
                  'until pg_isready -h diffgram-postgres -p 5432;
          do echo waiting for database; sleep 2; done;']
        
        
        
      containers:
      
      
      - image: gcr.io/diffgram-open-core/walrus:0.16.0
      
        imagePullPolicy: Always
        name: diffgram-walrus
        ports:
        - containerPort: 8080
      
        envFrom:
        - configMapRef:
            name: diffgram-walrus-configmap
        - secretRef:
            name: diffgram-walrus-secrets
        resources:
          requests:
            cpu: 1.0
            memory: 1G
          limits:
            cpu: 2.0
            memory: 2G
---
# Source: diffgram/charts/rabbitmq/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: diffgram-rabbitmq
  namespace: "default"
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-9.1.4
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: diffgram-rabbitmq-headless
  podManagementPolicy: OrderedReady
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: rabbitmq
      app.kubernetes.io/instance: diffgram
  template:
    metadata:
      labels:
        app.kubernetes.io/name: rabbitmq
        helm.sh/chart: rabbitmq-9.1.4
        app.kubernetes.io/instance: diffgram
        app.kubernetes.io/managed-by: Helm
      annotations:
        checksum/config: 90f3ba80cbd09b1aa0513943a5b142fbdfb582755cd247065d6a31476c4b6d4e
        checksum/secret: 51814d12d9a6e92712de061b1c43f6e74964885f7a78d51a542dc767dcc8d2ec
    spec:
      
      serviceAccountName: diffgram-rabbitmq
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: rabbitmq
                    app.kubernetes.io/instance: diffgram
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      terminationGracePeriodSeconds: 120
      initContainers:
      containers:
        - name: rabbitmq
          image: docker.io/bitnami/rabbitmq:3.9.18-debian-10-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/bash
                  - -ec
                  - |
                    if [[ -f /opt/bitnami/scripts/rabbitmq/nodeshutdown.sh ]]; then
                        /opt/bitnami/scripts/rabbitmq/nodeshutdown.sh -t "120" -d "false"
                    else
                        rabbitmqctl stop_app
                    fi
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: K8S_SERVICE_NAME
              value: diffgram-rabbitmq-headless
            - name: K8S_ADDRESS_TYPE
              value: hostname
            - name: RABBITMQ_FORCE_BOOT
              value: "no"
            - name: RABBITMQ_NODE_NAME
              value: "rabbit@$(MY_POD_NAME).$(K8S_SERVICE_NAME).$(MY_POD_NAMESPACE).svc.cluster.local"
            - name: K8S_HOSTNAME_SUFFIX
              value: ".$(K8S_SERVICE_NAME).$(MY_POD_NAMESPACE).svc.cluster.local"
            - name: RABBITMQ_MNESIA_DIR
              value: "/bitnami/rabbitmq/mnesia/$(RABBITMQ_NODE_NAME)"
            - name: RABBITMQ_LDAP_ENABLE
              value: "no"
            - name: RABBITMQ_LOGS
              value: "-"
            - name: RABBITMQ_ULIMIT_NOFILES
              value: "65536"
            - name: RABBITMQ_USE_LONGNAME
              value: "true"
            - name: RABBITMQ_ERL_COOKIE
              valueFrom:
                secretKeyRef:
                  name: diffgram-rabbitmq
                  key: rabbitmq-erlang-cookie
            - name: RABBITMQ_LOAD_DEFINITIONS
              value: "no"
            - name: RABBITMQ_DEFINITIONS_FILE
              value: "/app/load_definition.json"
            - name: RABBITMQ_SECURE_PASSWORD
              value: "yes"
            - name: RABBITMQ_USERNAME
              value: "user"
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: diffgram-rabbitmq
                  key: rabbitmq-password
            - name: RABBITMQ_PLUGINS
              value: "rabbitmq_management, rabbitmq_peer_discovery_k8s, rabbitmq_auth_backend_ldap"
          envFrom:
          ports:
            - name: amqp
              containerPort: 5672
            - name: dist
              containerPort: 25672
            - name: stats
              containerPort: 15672
            - name: epmd
              containerPort: 4369
            - name: amqp-ssl
              containerPort: 5671
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 120
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 20
            exec:
              command:
                - /bin/bash
                - -ec
                - rabbitmq-diagnostics -q ping
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 20
            exec:
              command:
                - /bin/bash
                - -ec
                - rabbitmq-diagnostics -q check_running && rabbitmq-diagnostics -q check_local_alarms
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: configuration
              mountPath: /bitnami/rabbitmq/conf
            - name: data
              mountPath: /bitnami/rabbitmq/mnesia
            - name: certs
              mountPath: /opt/bitnami/rabbitmq/certs
      volumes:
        - name: certs
          secret:
            secretName: diffgram-rabbitmq-certs
            items:
              - key: ca.crt
                path: ca_certificate.pem
              - key: tls.crt
                path: server_certificate.pem
              - key: tls.key
                path: server_key.pem
        - name: configuration
          configMap:
            name: diffgram-rabbitmq-config
            items:
              - key: rabbitmq.conf
                path: rabbitmq.conf
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app.kubernetes.io/name: rabbitmq
          app.kubernetes.io/instance: diffgram
      spec:
        accessModes:
            - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: diffgram/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: diffgram-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: "nginx"
    ingressclass.kubernetes.io/is-default-class: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    
    
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_pass_header directory_id;
    

    nginx.org/proxy-pass-headers: directory_id
    
    cert-manager.io/issuer: "letsencrypt-prod"
    
    watch-namespace: default
#    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    # Limit uploads to 8TB
    nginx.ingress.kubernetes.io/proxy-body-size: 800000m

spec:
 
  tls:
    - secretName: diffgram-cert-tls-example.com
      hosts:
        - example.com
        - www.example.com
  
  rules:
  - host: example.com
    http:
      paths:
      - path: /api/walrus(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: diffgram-walrus
            port:
                number: 8080
      - path: /api(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: diffgram-default
            port:
                number: 8080
      - path: /(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: frontend
            port:
                number: 8080
---
# Source: diffgram/templates/tls/issuer_prod.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
 name: letsencrypt-prod
spec:
 acme:
   # The ACME server URL
   server: https://acme-v02.api.letsencrypt.org/directory
   # Email address used for ACME registration
   email: pablo.estrada@diffgram.com
   # Name of a secret used to store the ACME account private key
   privateKeySecretRef:
     name: letsencrypt-prod
   # Enable the HTTP-01 challenge provider
   solvers:
   - http01:
       ingress:
         class: nginx
---
# Source: diffgram/templates/tls/issuer_staging.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
 name: letsencrypt-staging
spec:
 acme:
   # The ACME server URL
   server: https://acme-staging-v02.api.letsencrypt.org/directory
   # Email address used for ACME registration
   email: pablo.estrada@diffgram.com
   # Name of a secret used to store the ACME account private key
   privateKeySecretRef:
     name: letsencrypt-staging
   # Enable the HTTP-01 challenge provider
   solvers:
   - http01:
       ingress:
         class:  nginx
---
# Source: diffgram/charts/cert-manager/templates/webhook-mutating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: diffgram-cert-manager-webhook
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "webhook"
    helm.sh/chart: cert-manager-v1.1.0
  annotations:
    cert-manager.io/inject-ca-from-secret: "default/diffgram-cert-manager-webhook-ca"
webhooks:
  - name: webhook.cert-manager.io
    rules:
      - apiGroups:
          - "cert-manager.io"
          - "acme.cert-manager.io"
        apiVersions:
          - "*"
        operations:
          - CREATE
          - UPDATE
        resources:
          - "*/*"
    admissionReviewVersions: ["v1", "v1beta1"]
    timeoutSeconds: 10
    failurePolicy: Fail
    # Only include 'sideEffects' field in Kubernetes 1.12+
    sideEffects: None
    clientConfig:
      service:
        name: diffgram-cert-manager-webhook
        namespace: "default"
        path: /mutate
---
# Source: diffgram/charts/cert-manager/templates/webhook-validating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: diffgram-cert-manager-webhook
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: diffgram
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "webhook"
    helm.sh/chart: cert-manager-v1.1.0
  annotations:
    cert-manager.io/inject-ca-from-secret: "default/diffgram-cert-manager-webhook-ca"
webhooks:
  - name: webhook.cert-manager.io
    namespaceSelector:
      matchExpressions:
      - key: "cert-manager.io/disable-validation"
        operator: "NotIn"
        values:
        - "true"
      - key: "name"
        operator: "NotIn"
        values:
        - default
    rules:
      - apiGroups:
          - "cert-manager.io"
          - "acme.cert-manager.io"
        apiVersions:
          - "*"
        operations:
          - CREATE
          - UPDATE
        resources:
          - "*/*"
    admissionReviewVersions: ["v1", "v1beta1"]
    timeoutSeconds: 10
    failurePolicy: Fail
    # Only include 'sideEffects' field in Kubernetes 1.12+
    sideEffects: None
    clientConfig:
      service:
        name: diffgram-cert-manager-webhook
        namespace: "default"
        path: /validate

