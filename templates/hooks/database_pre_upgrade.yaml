apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}"
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      restartPolicy: Never
      imagePullSecrets:
      - name: diffgramsecret
      volumes:
      - name: service-account-credentials-volume
        secret:
          secretName: gcp-service-account-credentials
          items:
          - key: sa_json
            path: sa_credentials.json
      containers:
      - image: gcr.io/diffgram-enterprise/default:{{ .Values.diffgramVersion }}
        imagePullPolicy: Always
        name: pre-upgrade-alembic-hook
        volumeMounts:
        - name: service-account-credentials-volume
          mountPath: /etc/gcp
          readOnly: true
        envFrom:
        - configMapRef:
            name: diffgram-default-configmap
        - secretRef:
            name: diffgram-default-secrets
        initContainers:
        - name: check-db-ready
          image: postgres:9.6.5
          {{ if eq .Values.dbSettings.dbProvider "local"}}
          command: ['sh', '-c',
                    'until pg_isready -h diffgram-postgres -p 5432;
            do echo waiting for database; sleep 2; done;']
          {{ end }}
          {{ if eq .Values.dbSettings.dbProvider "rds"}}
          command: ['sh', '-c', 'until pg_isready -h postgres-rds-service -p 5432; do echo waiting for database; sleep 2; done;']
          {{ end }}
          {{ if eq .Values.dbSettings.dbProvider "azure"}}
          command: ['sh', '-c', 'until pg_isready -h postgres-azure-service -p 5432; do echo waiting for database; sleep 2; done;']
          {{ end }}
        # The actual migrations command
        command: ["sh","-c", "cd shared; export PYTHONPATH=/app; pip install sqlalchemy-utils==0.36.6;python /app/testing_and_other/create_database.py; alembic upgrade head"]